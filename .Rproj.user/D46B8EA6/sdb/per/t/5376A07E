{
    "collab_server" : "",
    "contents" : "#This function receives a dataframe with columns \"OccurFromDate\", \"OccurFromTime\", \"OccurToDate\" and \"OccurToTime\"\n#it returns an aoristic matrix, day by hour\n\naoristicDayWeek <- function(df){\n    library(stringr)\n    if(length(df$CallsForServiceSID) == nrow(df)){\n        #test to see if df is calls for service data\n        #if so, just turn dispatchdate/time to OccurFromDateTime\n        #and datecleared/timecleared to OccurToDateTime\n        df$OccurFromDateTime <- as.POSIXct(paste0(df$dispatchdate, \n                                                  \" \",\n                                                  str_pad(df$dispatchtime,\n                                                          width = 4, \n                                                          pad = 0)),\n                                           format = \"%Y-%m-%d %H%M\")\n        df$OccurToDateTime <- as.POSIXct(paste0(df$datecleared, \n                                                \" \",\n                                                str_pad(df$timecleared,\n                                                        width = 4, \n                                                        pad = 0)),\n                                         format = \"%Y-%m-%d %H%M\")\n    } else{\n        df$OccurFromDateTime <- as.POSIXct(paste0(df$OccurFromDate, \n                                                  \" \",\n                                                  str_pad(df$OccurFromTime,\n                                                          width = 4, \n                                                          pad = 0)),\n                                           format = \"%Y-%m-%d %H%M\")\n        df$OccurToDateTime <- as.POSIXct(paste0(df$OccurToDate, \n                                                \" \",\n                                                str_pad(df$OccurToTime,\n                                                        width = 4, \n                                                        pad = 0)),\n                                         format = \"%Y-%m-%d %H%M\")\n    }\n    \n    \n    duration <- difftime(time1 = df$OccurToDateTime,\n                         time2 = df$OccurFromDateTime, units = \"hours\") %>%\n        as.numeric() %>%\n        ceiling()\n    duration[duration == 0] <- 1\n    \n    #make vector of length 168 (7 * 24)\n    dayweekvec <- numeric(length = 168)\n    #name vector \n    names(dayweekvec) <- c(paste0(\"Sunday\", paste0(\"probHr\", 0:23)), \n                           paste0(\"Monday\", paste0(\"probHr\", 0:23)), \n                           paste0(\"Tuesday\", paste0(\"probHr\", 0:23)), \n                           paste0(\"Wednesday\", paste0(\"probHr\", 0:23)), \n                           paste0(\"Thursday\", paste0(\"probHr\", 0:23)), \n                           paste0(\"Friday\", paste0(\"probHr\", 0:23)), \n                           paste0(\"Saturday\", paste0(\"probHr\", 0:23)))\n    for(i in 1:nrow(df)){\n        if(duration[i] > 168 | is.na(duration[i])){\n            next\n        }\n        startday <- weekdays(df$OccurFromDateTime[i])\n        starthour <- lubridate::hour(df$OccurFromDateTime[i])\n        endday <- weekdays(df$OccurToDateTime[i])\n        endhour <- lubridate::hour(df$OccurToDateTime[i])\n        startindex <- which(names(dayweekvec) == paste0(startday, \"probHr\", starthour))\n        endindex <- which(names(dayweekvec) == paste0(endday, \"probHr\", endhour))\n        if(startindex <= endindex){\n            dayweekvec[startindex:endindex] <- dayweekvec[startindex:endindex] + 1 / duration[i]\n        } else if(startindex > endindex) {\n            dayweekvec[startindex:168] <- dayweekvec[startindex:168] + 1 / duration[i]\n            dayweekvec[1:endindex] <- dayweekvec[1:endindex] + 1 / duration[i]\n        }\n    }\n    dayweekvec <- dayweekvec / sum(dayweekvec)\n    dayweekmat <- matrix(nrow = 7, ncol = 24, data = 0)\n    rownames(dayweekmat) <- c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")\n    colnames(dayweekmat) <- paste0(\"Hr\", 0:23)\n    dayweekmat[\"Sunday\",] <- dayweekvec[1:24]\n    dayweekmat[\"Monday\",] <- dayweekvec[25:48]\n    dayweekmat[\"Tuesday\",] <- dayweekvec[49:72]\n    dayweekmat[\"Wednesday\",] <- dayweekvec[73:96]\n    dayweekmat[\"Thursday\",] <- dayweekvec[97:120]\n    dayweekmat[\"Friday\",] <- dayweekvec[121:144]\n    dayweekmat[\"Saturday\",] <- dayweekvec[145:168]\n    dayweekmat <- dayweekmat[,c(24, 1:23)]\n    return(dayweekmat)\n}\n\n",
    "created" : 1508941798738.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2149922887",
    "id" : "5376A07E",
    "lastKnownWriteTime" : 1490118632,
    "last_content_update" : 1490118632,
    "path" : "Z:/Projects/dashboard/RPDCrimeDashboard/Functions/aoristicDayWeek.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}