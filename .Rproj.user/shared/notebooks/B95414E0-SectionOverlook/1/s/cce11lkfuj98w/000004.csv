"0","curr.year <- as.numeric(format(Sys.Date(), '%Y')) ### This current year to automatically reference the current year"
"0","begindate <- paste0(curr.year, '-01-01') ### For CFS to automatically create the begindate based on current year"
"0","library(stringr)"
"0","library(knitr)"
"0","library(flexdashboard)"
"0","library(RColorBrewer)"
"0","library(plotly)"
"0","library(leaflet)"
"0","library(reshape2)"
"0","library(jsonlite)"
"0","library(DT)"
"0","library(RODBC)"
"0","library(mapview) #for cool popups"
"2","package ‘mapview’ was built under R version 3.4.2"
"0","library(leaflet.extras) #for popups in GeoJSON objects"
"0","library(tidyverse)"
"2","Loading tidyverse: tibble
Loading tidyverse: tidyr
Loading tidyverse: readr
Loading tidyverse: purrr
Loading tidyverse: dplyr
"
"2","Conflicts with tidy packages ------------------------------------------------------------------------------------------
"
"2","filter(): dplyr, plotly, stats
lag():    dplyr, stats
"
"0","source(""Z:/Projects/dashboard/RPDCrimeDashboard/Functions/LERMS_incidents.R"")"
"0","source(""Z:/Projects/dashboard/RPDCrimeDashboard/Functions/SPC.R"")"
"0","source(""Z:/Projects/dashboard/RPDCrimeDashboard/Functions/pullMCUdata.R"")"
"0","source(""Z:/Projects/dashboard/RPDCrimeDashboard/Functions/loadshootingvictims.R"")"
"0","overviewmapfunc <- function(daddyJSON, "
"0","                            lakeSPC, "
"0","                            geneseeSPC, "
"0","                            goodmanSPC, "
"0","                            clintonSPC, "
"0","                            centralSPC,"
"0","                            linkhash,"
"0","                            citymap,"
"0","                            sec) {"
"0","    babyJSON <- daddyJSON"
"0","    crimediff <- data_frame(""Section"" = sec,"
"0","                            ""Difference"" = c(lakeSPC[[2]] - lakeSPC[[3]],"
"0","                                             geneseeSPC[[2]] - geneseeSPC[[3]],"
"0","                                             goodmanSPC[[2]] - goodmanSPC[[3]],"
"0","                                             clintonSPC[[2]] - clintonSPC[[3]],"
"0","                                             centralSPC[[2]] - centralSPC[[3]])"
"0","                            ) %>%"
"0","        mutate(fillOpacity = abs(Difference / 100),"
"0","               fillColor = case_when(.$Difference > 0 ~ ""Red"","
"0","                                     .$Difference < 0 ~ ""Green"","
"0","                                     TRUE ~ ""White""))"
"0","    "
"0","    crimediff <- crimediff[match(lapply(babyJSON$features, "
"0","                                        function(x) x$properties$Section) %>% "
"0","                                     unlist(), "
"0","                                 crimediff$Section),]"
"0","    babyJSON$features <- lapply("
"0","        babyJSON$features, function(x) {"
"0","            x$properties$style <- list("
"0","                fillColor = crimediff$fillColor[which("
"0","                    crimediff$Section == x$properties$Section)],"
"0","                fillOpacity = crimediff$fillOpacity[which("
"0","                    crimediff$Section == x$properties$Section)]"
"0","            )"
"0","            x"
"0","        }"
"0","    )"
"0","    "
"0","    links <- data_frame(Section = sec,"
"0","                        link = c(paste0('<a href=""file://rpdfs.cor.local/mcac$/MCAC Operations/Crime Dashboards/LakeCrimeDashboard.html',"
"0","                                       linkhash, "
"0","                                       '"" target=""_blank"">Lake Section Dashboard</a>'), "
"0","                                 paste0('<a href=""file://rpdfs.cor.local/mcac$/MCAC Operations/Crime Dashboards/GeneseeCrimeDashboard.html',"
"0","                                       linkhash, "
"0","                                       '"" target=""_blank"">Genesee Section Dashboard</a>'), "
"0","                                 paste0('<a href=""file://rpdfs.cor.local/mcac$/MCAC Operations/Crime Dashboards/GoodmanCrimeDashboard.html',"
"0","                                       linkhash, "
"0","                                       '"" target=""_blank"">Goodman Section Dashboard</a>'), "
"0","                                 paste0('<a href=""file://rpdfs.cor.local/mcac$/MCAC Operations/Crime Dashboards/ClintonCrimeDashboard.html',"
"0","                                       linkhash, "
"0","                                       '"" target=""_blank"">Clinton Section Dashboard</a>'), "
"0","                                 paste0('<a href=""file://rpdfs.cor.local/mcac$/MCAC Operations/Crime Dashboards/CentralCrimeDashboard.html',"
"0","                                       linkhash, "
"0","                                       '"" target=""_blank"">Central Section Dashboard</a>')))"
"0","    "
"0","    babyJSON$features <- lapply(babyJSON$features, function(x) {"
"0","        "
"0","        x$properties$popup = links$link[which(links$Section == x$properties$Section)]"
"0","        x"
"0","    })"
"0","    "
"0","    return(citymap %>%"
"0","               addGeoJSON("
"0","                   babyJSON"
"0","               ) %>%"
"0","               addGeoJSONv2("
"0","                   babyJSON,"
"0","                   fillOpacity = 0,"
"0","                   popupProperty = ""popup"","
"0","                   labelProperty = ""Section"","
"0","                   highlightOptions = highlightOptions(color = 'white', weight = 10, bringToFront = TRUE)"
"0","               ))"
"0","    "
"0","}"
"0","simpleCap <- function(x) {"
"0","  s <- strsplit(x, "" "")[[1]]"
"0","  paste(toupper(substring(s, 1,1)), tolower(substring(s, 2)),"
"0","      sep="""", collapse="" "")"
"0","}"
"0","daddyJSON <- readLines(""https://opendata.arcgis.com/datasets/772f3621fa354ec9abf3ba33f3ace59e_0.geojson"") %>%"
"0","    paste(collapse = ""\n"") %>%"
"0","    fromJSON(simplifyVector = FALSE)"
"2","incomplete final line found on 'https://opendata.arcgis.com/datasets/772f3621fa354ec9abf3ba33f3ace59e_0.geojson'"
"0","#gather section names and set color palettes for sections and beats"
"0","secNames <- sapply(daddyJSON$features, function(x) x$properties$Section)"
"0","sectionpal <- colorFactor(palette = colorspace::sequential_hcl(5),"
"0","                          domain = secNames)"
"0","citymap <- readRDS(file = ""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/citymap.RDS"")"
"0","#old fitbounds: fitBounds(lng1 = -77.55, lat1 = 43.11, lng2 = -77.668684, lat2 = 43.264020)"
"0","#sevenDayGroupTable is a lookup table to get the current week (Group) from the date"
"0","#Because it uses length(Date) from seq.Date, it should work even in leap years"
"0","sevenDayGroupTable <- data.frame(Date = seq.Date(from = as.Date(begindate),"
"0","                                                 to = as.Date(paste0(curr.year, ""-12-31"")),"
"0","                                                 by = 1)) %>%"
"0","    mutate(DOY = 1:length(Date),"
"0","           Group = c(rep(1:51, each = 7), "
"0","                     rep(52, times = length(Date) - 357)))"
"0","curr.week <- sevenDayGroupTable$Group[match(as.numeric(format(Sys.Date(), "
"0","                                                             '%j')), "
"0","                                           sevenDayGroupTable$DOY)] - 1"
"0","firearm.desc <- trimws(c('Prohibited Use of Weapon City Limits', "
"0","                        'Use of Dangerous Weapon', "
"0","                        'Criminal Use Firearm 1st: Commit Violent Class B Felony', "
"0","                        'Discharges Loaded Firearm', "
"0","                        'Use Firearm 1st: Possess a Deadly Weapon-Loaded',"
"0","                        'Criminal Use Firearm 2nd: Possess Deadly Weapon: Loaded', "
"0","                        'Use Firearm 1st: Display Firearm', "
"0","                        'Criminal Use Firearm 2nd: Display Firearm'))"
"0","firearmCrimeTypes <- c(""Aggravated Assault"", ""Robbery"", ""Homicide"", ""Rape"", ""Simple Assault"")"
"0","#load in RPD's crime data"
"0","df <- readRDS(file = ""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/citywidedf.RDS"")"
"0","#use beatNames to make factor levels for beats"
"0","beatNames <- df %>%"
"0","    dplyr::select(GEOBeat) %>%"
"0","    unique() %>% "
"0","    filter(! grepl(x = GEOBeat, pattern = ""\\*"")) %>% #remove *** as a beat name"
"0","    arrange(substr(GEOBeat, 3, 3), GEOBeat) %>%"
"0","    mutate(GEOBeat = as.factor(GEOBeat)) #this keeps *** as a factor level"
"0","CPWs <- df %>% filter(CrimeType == ""Dangerous Weapons"" & "
"0","                          !trimws(Description) %in% firearm.desc &"
"0","                          as.numeric(WeaponIBRValue) < 11) %>%"
"0","    mutate(OccurFromDate = as.character(OccurFromDate)) #for table display purposes"
"0","crimes <- c('Aggravated Assault', 'Arson', 'Burglary', 'Homicide', 'Larceny', 'MV Theft', 'Rape', 'Robbery', 'Firearm')"
"0","sec <- c('Lake', 'Genesee', 'Goodman', 'Clinton', 'Central')"
"0","pal <- brewer.pal(name = ""Reds"", n = 9)"
"0","PropVals <- read.csv(""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/ProportionsAndCounts.csv"","
"0","                     header= T)"
"0","ShootingControlLimits <- read.csv(""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/3YrWeightedControlLimitsShootings.csv"")"
"0","ShootingProps <- read.csv(""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/ProportionsAndCountsShootings.csv"","
"0","                          stringsAsFactors = FALSE)"
"0","ShootingPropsFull <- ShootingProps"
"0","histdata <- read.csv(file = ""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/historicaldata.csv"","
"0","                     stringsAsFactors = FALSE,"
"0","                     header = TRUE)"
"0","controllimits <- read.csv(file = ""Z:/Projects/dashboard/RPDCrimeDashboard/Objects/3YrWeightedControlLimits.csv"", "
"0","                       header = TRUE)"
"0","controllimits <- rbind(data.frame(controllimits, Year = 2017),"
"0","                    data.frame(controllimits, Year = 2018),"
"0","                    data.frame(controllimits, Year = 2019))"
"0","# "
"0","# mculist <- pullMCUdata()"
"0","# MCUhoms <- mculist[[1]]"
"0","# person <- mculist[[2]]"
"0","# rm(mculist)"
"0","# MCUhoms <- MCUhoms %>%"
"0","#     mutate(CrimeType = ""Homicide"","
"0","#            DateOfEvent = as.Date(DateOfEvent, format = ""%Y-%m-%d""),"
"0","#            DOYofEvent = as.numeric(format(DateOfEvent, ""%j"")),"
"0","#            YearofEvent = as.numeric(format(DateOfEvent, ""%Y"")),"
"0","#            CaseStatus = unname(sapply(CaseStatus, simpleCap))) %>%"
"0","#     filter(YearofEvent == curr.year) %>%"
"0","#     dplyr::rename(sec = Section,"
"0","#                   Lat = Latitude,"
"0","#                   Lon = Longitude,"
"0","#                   FullAddress = Address) %>%"
"0","#     left_join(sevenDayGroupTable, by = c(""DOYofEvent"" = ""DOY"")) %>%"
"0","#     dplyr::select(-Date) %>%"
"0","#     dplyr::rename(""SevenDaysGroup"" = Group)"
"0","# "
"0","# personincident <- left_join(MCUhoms, person, by = ""CaseNumber"")"
"0","# "
"0","# sv <- loadshootingvictims()"
"0","# drops <- c(""Lat"", ""Lon"")"
"0","# svjoined <- left_join(x = sv, y = df, by = c(""CaseNumber"" = ""CRNum"")) %>%"
"0","#     dplyr::select(-one_of(drops)) %>%"
"0","#     rename(Lat = Latitude, Lon = Longitude)"
